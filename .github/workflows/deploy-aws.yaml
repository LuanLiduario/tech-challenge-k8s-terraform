name: Deploy AWS Production - FASTFOOD

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: EKS-FIAP

jobs:
  deploy-production:
    name: Deploy EKS Production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login ECR
        run: |
          aws ecr get-login-password \
          --region ${{ env.AWS_REGION }} | \
          docker login --username AWS \
          --password-stdin \
          759212231558.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker Image
        run: |
          docker build -t fastfood-app . && \
          docker tag fastfood-app:latest 759212231558.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/fastfood-app:latest && \
          docker push 759212231558.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/fastfood-app:latest

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig \
            --region ${{ env.AWS_REGION }} \
            --name ${{ env.CLUSTER_NAME }}

      - name: Create Secrets in Kubernetes
        run: |
          kubectl create secret generic fast-food-secrets \
            --from-literal=DB_USER=${{ secrets.DB_USER }} \
            --from-literal=DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --from-literal=SECRET_KEY=${{ secrets.SECRET_KEY }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply ConfigMap and Deployments
        run: |
          kubectl apply -f k8s/configmap.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/hpa.yaml
